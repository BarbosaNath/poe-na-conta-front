/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root';
import { Route as WithSidebarLayoutLayoutImport } from './pages/_with-sidebar-layout/layout';
import { Route as VerifyEmailIndexImport } from './pages/verify-email/index';
import { Route as LoginIndexImport } from './pages/login/index';
import { Route as ResetPasswordNewPasswordIndexImport } from './pages/reset-password/new-password/index';
import { Route as ResetPasswordsendEmailIndexImport } from './pages/reset-password/(send-email)/index';
import { Route as WithSidebarLayoutTransactionsIndexImport } from './pages/_with-sidebar-layout/transactions/index';
import { Route as WithSidebarLayoutProfileIndexImport } from './pages/_with-sidebar-layout/profile/index';
import { Route as WithSidebarLayoutCategoriesIndexImport } from './pages/_with-sidebar-layout/categories/index';
import { Route as WithSidebarLayouthomeIndexImport } from './pages/_with-sidebar-layout/(home)/index';

// Create/Update Routes

const WithSidebarLayoutLayoutRoute = WithSidebarLayoutLayoutImport.update({
  id: '/_with-sidebar-layout',
  getParentRoute: () => rootRoute,
} as any);

const VerifyEmailIndexRoute = VerifyEmailIndexImport.update({
  id: '/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => rootRoute,
} as any);

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any);

const ResetPasswordNewPasswordIndexRoute =
  ResetPasswordNewPasswordIndexImport.update({
    id: '/reset-password/new-password/',
    path: '/reset-password/new-password/',
    getParentRoute: () => rootRoute,
  } as any);

const ResetPasswordsendEmailIndexRoute =
  ResetPasswordsendEmailIndexImport.update({
    id: '/reset-password/(send-email)/',
    path: '/reset-password/',
    getParentRoute: () => rootRoute,
  } as any);

const WithSidebarLayoutTransactionsIndexRoute =
  WithSidebarLayoutTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => WithSidebarLayoutLayoutRoute,
  } as any);

const WithSidebarLayoutProfileIndexRoute =
  WithSidebarLayoutProfileIndexImport.update({
    id: '/profile/',
    path: '/profile/',
    getParentRoute: () => WithSidebarLayoutLayoutRoute,
  } as any);

const WithSidebarLayoutCategoriesIndexRoute =
  WithSidebarLayoutCategoriesIndexImport.update({
    id: '/categories/',
    path: '/categories/',
    getParentRoute: () => WithSidebarLayoutLayoutRoute,
  } as any);

const WithSidebarLayouthomeIndexRoute = WithSidebarLayouthomeIndexImport.update(
  {
    id: '/(home)/',
    path: '/',
    getParentRoute: () => WithSidebarLayoutLayoutRoute,
  } as any,
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_with-sidebar-layout': {
      id: '/_with-sidebar-layout';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof WithSidebarLayoutLayoutImport;
      parentRoute: typeof rootRoute;
    };
    '/login/': {
      id: '/login/';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/verify-email/': {
      id: '/verify-email/';
      path: '/verify-email';
      fullPath: '/verify-email';
      preLoaderRoute: typeof VerifyEmailIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_with-sidebar-layout/(home)/': {
      id: '/_with-sidebar-layout/(home)/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof WithSidebarLayouthomeIndexImport;
      parentRoute: typeof WithSidebarLayoutLayoutImport;
    };
    '/_with-sidebar-layout/categories/': {
      id: '/_with-sidebar-layout/categories/';
      path: '/categories';
      fullPath: '/categories';
      preLoaderRoute: typeof WithSidebarLayoutCategoriesIndexImport;
      parentRoute: typeof WithSidebarLayoutLayoutImport;
    };
    '/_with-sidebar-layout/profile/': {
      id: '/_with-sidebar-layout/profile/';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof WithSidebarLayoutProfileIndexImport;
      parentRoute: typeof WithSidebarLayoutLayoutImport;
    };
    '/_with-sidebar-layout/transactions/': {
      id: '/_with-sidebar-layout/transactions/';
      path: '/transactions';
      fullPath: '/transactions';
      preLoaderRoute: typeof WithSidebarLayoutTransactionsIndexImport;
      parentRoute: typeof WithSidebarLayoutLayoutImport;
    };
    '/reset-password/(send-email)/': {
      id: '/reset-password/(send-email)/';
      path: '/reset-password';
      fullPath: '/reset-password';
      preLoaderRoute: typeof ResetPasswordsendEmailIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/reset-password/new-password/': {
      id: '/reset-password/new-password/';
      path: '/reset-password/new-password';
      fullPath: '/reset-password/new-password';
      preLoaderRoute: typeof ResetPasswordNewPasswordIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

interface WithSidebarLayoutLayoutRouteChildren {
  WithSidebarLayouthomeIndexRoute: typeof WithSidebarLayouthomeIndexRoute;
  WithSidebarLayoutCategoriesIndexRoute: typeof WithSidebarLayoutCategoriesIndexRoute;
  WithSidebarLayoutProfileIndexRoute: typeof WithSidebarLayoutProfileIndexRoute;
  WithSidebarLayoutTransactionsIndexRoute: typeof WithSidebarLayoutTransactionsIndexRoute;
}

const WithSidebarLayoutLayoutRouteChildren: WithSidebarLayoutLayoutRouteChildren =
  {
    WithSidebarLayouthomeIndexRoute: WithSidebarLayouthomeIndexRoute,
    WithSidebarLayoutCategoriesIndexRoute:
      WithSidebarLayoutCategoriesIndexRoute,
    WithSidebarLayoutProfileIndexRoute: WithSidebarLayoutProfileIndexRoute,
    WithSidebarLayoutTransactionsIndexRoute:
      WithSidebarLayoutTransactionsIndexRoute,
  };

const WithSidebarLayoutLayoutRouteWithChildren =
  WithSidebarLayoutLayoutRoute._addFileChildren(
    WithSidebarLayoutLayoutRouteChildren,
  );

export interface FileRoutesByFullPath {
  '': typeof WithSidebarLayoutLayoutRouteWithChildren;
  '/login': typeof LoginIndexRoute;
  '/verify-email': typeof VerifyEmailIndexRoute;
  '/': typeof WithSidebarLayouthomeIndexRoute;
  '/categories': typeof WithSidebarLayoutCategoriesIndexRoute;
  '/profile': typeof WithSidebarLayoutProfileIndexRoute;
  '/transactions': typeof WithSidebarLayoutTransactionsIndexRoute;
  '/reset-password': typeof ResetPasswordsendEmailIndexRoute;
  '/reset-password/new-password': typeof ResetPasswordNewPasswordIndexRoute;
}

export interface FileRoutesByTo {
  '/login': typeof LoginIndexRoute;
  '/verify-email': typeof VerifyEmailIndexRoute;
  '/': typeof WithSidebarLayouthomeIndexRoute;
  '/categories': typeof WithSidebarLayoutCategoriesIndexRoute;
  '/profile': typeof WithSidebarLayoutProfileIndexRoute;
  '/transactions': typeof WithSidebarLayoutTransactionsIndexRoute;
  '/reset-password': typeof ResetPasswordsendEmailIndexRoute;
  '/reset-password/new-password': typeof ResetPasswordNewPasswordIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_with-sidebar-layout': typeof WithSidebarLayoutLayoutRouteWithChildren;
  '/login/': typeof LoginIndexRoute;
  '/verify-email/': typeof VerifyEmailIndexRoute;
  '/_with-sidebar-layout/(home)/': typeof WithSidebarLayouthomeIndexRoute;
  '/_with-sidebar-layout/categories/': typeof WithSidebarLayoutCategoriesIndexRoute;
  '/_with-sidebar-layout/profile/': typeof WithSidebarLayoutProfileIndexRoute;
  '/_with-sidebar-layout/transactions/': typeof WithSidebarLayoutTransactionsIndexRoute;
  '/reset-password/(send-email)/': typeof ResetPasswordsendEmailIndexRoute;
  '/reset-password/new-password/': typeof ResetPasswordNewPasswordIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ''
    | '/login'
    | '/verify-email'
    | '/'
    | '/categories'
    | '/profile'
    | '/transactions'
    | '/reset-password'
    | '/reset-password/new-password';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/login'
    | '/verify-email'
    | '/'
    | '/categories'
    | '/profile'
    | '/transactions'
    | '/reset-password'
    | '/reset-password/new-password';
  id:
    | '__root__'
    | '/_with-sidebar-layout'
    | '/login/'
    | '/verify-email/'
    | '/_with-sidebar-layout/(home)/'
    | '/_with-sidebar-layout/categories/'
    | '/_with-sidebar-layout/profile/'
    | '/_with-sidebar-layout/transactions/'
    | '/reset-password/(send-email)/'
    | '/reset-password/new-password/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  WithSidebarLayoutLayoutRoute: typeof WithSidebarLayoutLayoutRouteWithChildren;
  LoginIndexRoute: typeof LoginIndexRoute;
  VerifyEmailIndexRoute: typeof VerifyEmailIndexRoute;
  ResetPasswordsendEmailIndexRoute: typeof ResetPasswordsendEmailIndexRoute;
  ResetPasswordNewPasswordIndexRoute: typeof ResetPasswordNewPasswordIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  WithSidebarLayoutLayoutRoute: WithSidebarLayoutLayoutRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  VerifyEmailIndexRoute: VerifyEmailIndexRoute,
  ResetPasswordsendEmailIndexRoute: ResetPasswordsendEmailIndexRoute,
  ResetPasswordNewPasswordIndexRoute: ResetPasswordNewPasswordIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_with-sidebar-layout",
        "/login/",
        "/verify-email/",
        "/reset-password/(send-email)/",
        "/reset-password/new-password/"
      ]
    },
    "/_with-sidebar-layout": {
      "filePath": "_with-sidebar-layout/layout.tsx",
      "children": [
        "/_with-sidebar-layout/(home)/",
        "/_with-sidebar-layout/categories/",
        "/_with-sidebar-layout/profile/",
        "/_with-sidebar-layout/transactions/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/verify-email/": {
      "filePath": "verify-email/index.tsx"
    },
    "/_with-sidebar-layout/(home)/": {
      "filePath": "_with-sidebar-layout/(home)/index.tsx",
      "parent": "/_with-sidebar-layout"
    },
    "/_with-sidebar-layout/categories/": {
      "filePath": "_with-sidebar-layout/categories/index.tsx",
      "parent": "/_with-sidebar-layout"
    },
    "/_with-sidebar-layout/profile/": {
      "filePath": "_with-sidebar-layout/profile/index.tsx",
      "parent": "/_with-sidebar-layout"
    },
    "/_with-sidebar-layout/transactions/": {
      "filePath": "_with-sidebar-layout/transactions/index.tsx",
      "parent": "/_with-sidebar-layout"
    },
    "/reset-password/(send-email)/": {
      "filePath": "reset-password/(send-email)/index.tsx"
    },
    "/reset-password/new-password/": {
      "filePath": "reset-password/new-password/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
