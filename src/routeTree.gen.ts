/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root';
import { Route as WithSidebarLayoutLayoutImport } from './pages/_with-sidebar-layout/layout';
import { Route as LoginIndexImport } from './pages/login/index';
import { Route as WithSidebarLayouthomeIndexImport } from './pages/_with-sidebar-layout/(home)/index';

// Create/Update Routes

const WithSidebarLayoutLayoutRoute = WithSidebarLayoutLayoutImport.update({
  id: '/_with-sidebar-layout',
  getParentRoute: () => rootRoute,
} as any);

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any);

const WithSidebarLayouthomeIndexRoute = WithSidebarLayouthomeIndexImport.update(
  {
    id: '/(home)/',
    path: '/',
    getParentRoute: () => WithSidebarLayoutLayoutRoute,
  } as any,
);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_with-sidebar-layout': {
      id: '/_with-sidebar-layout';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof WithSidebarLayoutLayoutImport;
      parentRoute: typeof rootRoute;
    };
    '/login/': {
      id: '/login/';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_with-sidebar-layout/(home)/': {
      id: '/_with-sidebar-layout/(home)/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof WithSidebarLayouthomeIndexImport;
      parentRoute: typeof WithSidebarLayoutLayoutImport;
    };
  }
}

// Create and export the route tree

interface WithSidebarLayoutLayoutRouteChildren {
  WithSidebarLayouthomeIndexRoute: typeof WithSidebarLayouthomeIndexRoute;
}

const WithSidebarLayoutLayoutRouteChildren: WithSidebarLayoutLayoutRouteChildren =
  {
    WithSidebarLayouthomeIndexRoute: WithSidebarLayouthomeIndexRoute,
  };

const WithSidebarLayoutLayoutRouteWithChildren =
  WithSidebarLayoutLayoutRoute._addFileChildren(
    WithSidebarLayoutLayoutRouteChildren,
  );

export interface FileRoutesByFullPath {
  '': typeof WithSidebarLayoutLayoutRouteWithChildren;
  '/login': typeof LoginIndexRoute;
  '/': typeof WithSidebarLayouthomeIndexRoute;
}

export interface FileRoutesByTo {
  '/login': typeof LoginIndexRoute;
  '/': typeof WithSidebarLayouthomeIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/_with-sidebar-layout': typeof WithSidebarLayoutLayoutRouteWithChildren;
  '/login/': typeof LoginIndexRoute;
  '/_with-sidebar-layout/(home)/': typeof WithSidebarLayouthomeIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '' | '/login' | '/';
  fileRoutesByTo: FileRoutesByTo;
  to: '/login' | '/';
  id:
    | '__root__'
    | '/_with-sidebar-layout'
    | '/login/'
    | '/_with-sidebar-layout/(home)/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  WithSidebarLayoutLayoutRoute: typeof WithSidebarLayoutLayoutRouteWithChildren;
  LoginIndexRoute: typeof LoginIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  WithSidebarLayoutLayoutRoute: WithSidebarLayoutLayoutRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_with-sidebar-layout",
        "/login/"
      ]
    },
    "/_with-sidebar-layout": {
      "filePath": "_with-sidebar-layout/layout.tsx",
      "children": [
        "/_with-sidebar-layout/(home)/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/_with-sidebar-layout/(home)/": {
      "filePath": "_with-sidebar-layout/(home)/index.tsx",
      "parent": "/_with-sidebar-layout"
    }
  }
}
ROUTE_MANIFEST_END */
